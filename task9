def accepts(dfa, start, accepting, st):
    state = start
    for i in st:
        state = dfa[state][i]
    return state in accepting

dfa_even = {0:{'0':1, '1':1},
       1:{'0':0, '1':0}}

dfa_even_binary_number = {0:{'0':0, '1':1},
       1:{'0':0, '1':1}}

dfa_odd_binary_number = {0:{'1':0, '0':1},
       1:{'1':0, '0':1}}

dfa_name = {0:{'g':1},
       1:{'r':1, 'e':1, 'g':1}}
       
dfa_abst = {0:{'0':0, '1':1},
       1:{'0':2, '1':1},
       2:{'0':1, '1':1}}

dfa_element_to_state = {0:{'0':0, '1':1},
       1:{'0':0, '1':1}}

dfa_three_states = {0:{'0':0, '1':1},
       1:{'0':2, '1':0},
       2:{'0':1, '1':2}}

dfa_traffic_light = {0:{'0':0, '1':1},#green
       1:{'0':2, '1':2},#yellow
       2:{'0':0, '1':2}}#red

dfa_thermostat = {0:{'1':1, '0':0},
       1:{'1':1, '0':0}}

dfa_001 = {0:{'1':0, '0':1},
       1:{'0':2, '1':0},
       2:{'0':2, '1':3},
       3:{'0':3, '1':3}}



print(accepts(dfa_even, 0, {0}, "00000000"))#even lengthed dfa  #1
print(accepts(dfa_even_binary_number, 0, {0}, "11010"))#even number dfa #2
print(accepts(dfa_odd_binary_number, 1, {0}, "110101"))#odd number dfa #3
print(accepts(dfa_name, 0, {1}, "greg"))#my name #4
print(accepts(dfa_abst, 0, {1}, "0010001"))#abstract dfa from sec 1.4 #5
print(accepts(dfa_element_to_state, 0, {1}, "0001101"))#goes to the state of the element 0->0 1->1 #6
print(accepts(dfa_element_to_state, 0, {1}, "0001101"))#three states #7
print(accepts(dfa_traffic_light, 0, {0}, "00001110000"))#stays green when no cars are waiting then turns yellow for a tick then stays red while there are cars waiting and turns green when there are none #8
print(accepts(dfa_thermostat, 0, {1}, "0011001"))#thermostat on when hot (1) and off when not (0) goal is to be on #9
print(accepts(dfa_001, 0, {3}, "0110010101"))#accepts if there is 001 in the string #10
